load(
    "@rules_haskell//haskell:defs.bzl",
    "haskell_binary",
    "haskell_library",
    "haskell_test",
)

# rule generated from jni/jni.cabal by gazelle_cabal
haskell_library(
    name = "jni",
    srcs = [
        "src/common/Foreign/JNI.hs",
        "src/common/Foreign/JNI/Internal.hs",
        "src/common/Foreign/JNI/Internal/BackgroundWorker.hs",
        "src/common/Foreign/JNI/Internal/RWLock.hs",
        "src/common/Foreign/JNI/NativeMethod.hsc",
        "src/common/Foreign/JNI/String.hs",
        "src/common/Foreign/JNI/Types.hs",
        "src/common/Foreign/JNI/Unsafe.hs",
        "src/common/Foreign/JNI/Unsafe/Internal.hs",
        "src/common/Foreign/JNI/Unsafe/Internal/Introspection.hs",
        "src/common/Foreign/JNI/Unsafe/Internal/JVM.hs",
        "src/linear-types/Foreign/JNI/Safe.hs",
        "src/linear-types/Foreign/JNI/Types/Safe.hs",
    ],
    ghcopts = [
        "-DJNI_CAT_TOKENS_PATH=$(location :cat-tokens)",
        "-DVERSION_jni=\"0.8.0\"",
    ],
    tools = [":cat-tokens"],
    version = "0.8.0",
    visibility = ["//visibility:public"],
    deps = [
        "@openjdk//:lib",
        "@stackage//:async",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:choice",
        "@stackage//:constraints",
        "@stackage//:containers",
        "@stackage//:deepseq",
        "@stackage//:inline-c",
        "@stackage//:linear-base",
        "@stackage//:singletons-base",
        "@stackage//:stm",
        "@stackage//:text",
    ],
)

# rule generated from jni/jni.cabal by gazelle_cabal
haskell_test(
    name = "spec",
    timeout = "short",
    srcs = [
        "tests/Foreign/JNISpec.hs",
        "tests/Main.hs",
        "tests/Spec.hs",
    ],
    # keep
    extra_srcs = ["@openjdk//:rpath"],
    ghcopts = [
        "-threaded",
        "-lpthread",
        "-DHSPEC_DISCOVER_HSPEC_DISCOVER_PATH=$(location @stackage-exe//hspec-discover)",
        "-optl-Wl,@$(location @openjdk//:rpath)",  # keep
        "-DVERSION_jni=\"0.8.0\"",
    ],
    main_file = "tests/Main.hs",
    tools = ["@stackage-exe//hspec-discover"],
    version = "0.8.0",
    visibility = ["//visibility:public"],
    deps = [
        ":jni",
        "@stackage//:base",
        "@stackage//:hspec",
        "@stackage//:singletons-base",
    ],
)

# rule generated from jni/jni.cabal by gazelle_cabal
haskell_binary(
    name = "cat-tokens",
    srcs = ["cat-tokens/Main.hs"],
    ghcopts = ["-DVERSION_jni=\"0.8.0\""],
    main_file = "cat-tokens/Main.hs",
    version = "0.8.0",
    visibility = ["//visibility:public"],
    deps = [
        "@stackage//:base",
        "@stackage//:bytestring",
    ],
)
